// window.onload = function () {
   
//     const TOPESUPERIOR = 10;
//     const TOPEINFERIOR = 265;
//     const fps = 60;
//     const botonStart = document.getElementById("start")
//     let canvas, ctx;
//     let jugador1, jugador2, pelota;
//     let yArriba, yAbajo;
//     let marcadorJugador1=8;
//     let marcadorJugador2=0;
//     let id;

//     // Clase para crear la pelota.

//     class Ball {
//         constructor() {
//             this.x = 300;
//             this.y = 175;
//             this.radio = 10; // El radio de la pelota, cuanto más radio, mas grande.
//             this.color = "white";
//             this.velocidad = 3.5;
//             this.bajando = false;
//         }

//         moverPelota() {
//             // Actualiza la posición según la dirección (ángulo)
//             this.x += this.velocidad * this.direccionX;
//             this.y += this.velocidad * this.direccionY;
    
//             // Rebote con bordes superior e inferior
//             if (this.y - this.radio <= 0 || this.y + this.radio >= 350) {
//                 this.direccionY *= -1; // Invierte la dirección en Y
//             }
//         }
    
//         dibujarPelota(ctx) {
//             ctx.beginPath();
//             ctx.arc(this.x, this.y, this.radio, 0, Math.PI * 2);
//             ctx.fillStyle = this.color;
//             ctx.fill();
//             ctx.closePath();
//         }
//     }   

//     // Clase para crear los jugadores

//     class Jugadores {
//         constructor(x) {
//             this.x = x;
//             this.y = 137;
//             this.anchura = 15;
//             this.altura = 75;
//             this.velocidad = 3;
//             this.color = "white";
//         }

//         generarPosicionArriba() {
//             this.y = this.y - this.velocidad;

//             if (this.y < TOPESUPERIOR) this.y = TOPESUPERIOR;
//         }

//         generarPosicionAbajo() {
//             this.y = this.y + this.velocidad;

//             if (this.y > TOPEINFERIOR) this.y = TOPEINFERIOR;
//         }

//     }

//     // Funcion que activa la partida al darle al boton START.

//     function empezarPartida() {
//         pintarPong();
//         id = setInterval(pintarPong, 1000/fps);
//         botonStart.disabled = true;
//     }

//     function reiniciarPartida() {
//         clearInterval(id);
//         marcadorJugador1 = 0;
//         marcadorJugador2 = 0;
//         pelota = new Ball();
//         jugador1 = new Jugadores(15);
//         jugador2 = new Jugadores(570); 
//         ctx.clearRect(0, 0, canvas.width, canvas.height);
//         document.getElementById("start").disabled = false;
//         pintarMarcador();
//     }

//     //Funcion del juego

//     function pintarPong() {


//         ctx.clearRect(0, 0, 600, 350);
//         pelota.dibujarPelota(ctx);
//         ctx.fillRect(jugador1.x, jugador1.y, jugador1.anchura, jugador1.altura);
//         ctx.fillRect(jugador2.x, jugador2.y, jugador2.anchura, jugador2.altura);
//         ctx.fillStyle = pelota.color;

//         terminarPartida();

//         if (yArriba) jugador1.generarPosicionArriba();
//         if (yAbajo) jugador1.generarPosicionAbajo();

//         moverJugador2();

//         pelota.moverPelota();

//         colisionConJugador();

//         pintarMarcador();
//     }

//         // Función para mover al jugador 2 como IA

//         function moverJugador2() {

//             // Si la pelota está por encima del centro del jugador 2, mueve hacia arriba
//             if (pelota.y < jugador2.y + jugador2.altura / 2) {
//                 jugador2.y -= jugador2.velocidad;
//                 if (jugador2.y < TOPESUPERIOR) jugador2.y = TOPESUPERIOR; // Límite superior
//             }
//             // Si la pelota está por debajo del centro del jugador 2, mueve hacia abajo
//             else if (pelota.y > jugador2.y + jugador2.altura / 2) {
//                 jugador2.y += jugador2.velocidad;
//                 if (jugador2.y > TOPEINFERIOR) jugador2.y = TOPEINFERIOR; // Límite inferior
//             }
//         }
    

//         // Funcion para detectar colisiones.

//         function colisionConJugador() {
//             // Bordes de la pelota
//             let pelotaIzq = pelota.x - pelota.radio;
//             let pelotaDer = pelota.x + pelota.radio;
//             let pelotaArriba = pelota.y - pelota.radio;
//             let pelotaAbajo = pelota.y + pelota.radio;
        
//             // Bordes del jugador 1
//             let jugador1Izq = jugador1.x;
//             let jugador1Der = jugador1.x + jugador1.anchura;
//             let jugador1Arriba = jugador1.y;
//             let jugador1Abajo = jugador1.y + jugador1.altura;
        
//             // Bordes del jugador 2
//             let jugador2Izq = jugador2.x;
//             let jugador2Der = jugador2.x + jugador2.anchura;
//             let jugador2Arriba = jugador2.y;
//             let jugador2Abajo = jugador2.y + jugador2.altura;
        
//             // Colisión con jugador 1
//             if (
//                 pelotaIzq < jugador1Der &&
//                 pelotaDer > jugador1Izq &&
//                 pelotaArriba < jugador1Abajo &&
//                 pelotaAbajo > jugador1Arriba
//             ) {
//                 pelota.direccionX = 1; // Rebota hacia la derecha
        
//                 // Calcular el ángulo según el impacto
//                 let impacto = (pelota.y - (jugador1.y + jugador1.altura / 2)) / (jugador1.altura / 2);
//                 pelota.direccionY = impacto; // Ajusta el ángulo en Y
        
//                 normalizarDireccion();
//             }
        
//             // Colisión con jugador 2
//             if (
//                 pelotaIzq < jugador2Der &&
//                 pelotaDer > jugador2Izq &&
//                 pelotaArriba < jugador2Abajo &&
//                 pelotaAbajo > jugador2Arriba
//             ) {
//                 pelota.direccionX = -1; // Rebota hacia la izquierda
        
//                 // Calcular el ángulo según el impacto
//                 let impacto = (pelota.y - (jugador2.y + jugador2.altura / 2)) / (jugador2.altura / 2);
//                 pelota.direccionY = impacto; // Ajusta el ángulo en Y
        
//                 normalizarDireccion();
//             }
//         }
        
        
        
    

//     // Function para activar la tecla de los movimientos.

//     function activaMovimiento(evt) {
//         switch (evt.keyCode) {
//             // Arriba
//             case 38:
//                 yArriba = true;
//                 break;

//             // Abajo.
//             case 40:
//                 yAbajo = true;
//                 break;
//         }
//     }

//     // Function para desactivar la tecla de los movimientos.

//     function desactivaMovimiento(evt) {
//         switch (evt.keyCode) {
//             // Arriba
//             case 38:
//                 yArriba = false;
//                 break;

//             // Abajo.
//             case 40:
//                 yAbajo = false;
//                 break;
//         }
//     }

//     // Funcion para terminar la partida.

//     function terminarPartida() {
//         if (marcadorJugador1 === 10) {
//             ctx.font = "25px Arial";
//             ctx.fillStyle = "yellow";
//             ctx.fillText("EL JUGADOR 1 HA GANADO LA PARTIDA.", 50, 325);
//             clearInterval(id);
//         } else if (marcadorJugador2 === 10) {
//             ctx.font = "25px Arial";
//             ctx.fillStyle = "yellow";
//             ctx.fillText("EL JUGADOR 2 HA GANADO LA PARTIDA.", 50, 325);
//             clearInterval(id);
//         }
//     }

//     // Funcion de suma de puntos.

//     function haSidoPunto() {
//         if (pelota.x - pelota.radio < -6) { // // La pelota cruza el límite de la izquierda (jugador 2)
//             marcadorJugador2++;
//             pelota.x = 300;
//             pelota.y = 175;
//         } else if (pelota.x + pelota.radio > 605) { // La pelota cruza el límite de la derecha (jugador 2)
//             marcadorJugador1++;
//             pelota.x = 300;
//             pelota.y = 175;
//         }
//     }

        
//     // Funcion para mostrar el marcador.
//     function pintarMarcador(){
//          ctx.font="50px Arial"
//          ctx.fillText(marcadorJugador1, 200, 55);
//          ctx.fillText(marcadorJugador2, 400, 55);
//          haSidoPunto();

//     }

//     pelota = new Ball();

//     jugador1 = new Jugadores(15);

//     jugador2 = new Jugadores(570);

//     document.addEventListener("keydown", activaMovimiento, false);
//     document.addEventListener("keyup", desactivaMovimiento, false);

//     canvas = document.getElementById("miCanvas");

//     ctx = canvas.getContext("2d");

//     document.getElementById("start").onclick = empezarPartida; // Manejador para ejecutar la funcion de empezarPartida.

//     document.getElementById("restart").onclick = reiniciarPartida; // Manejador para ejecutar la funcion de reiniciarPartida.
// };

window.onload = function () {
    const TOPESUPERIOR = 10;
    const TOPEINFERIOR = 265;
    const fps = 60;
    const botonStart = document.getElementById("start");
    let canvas, ctx;
    let jugador1, jugador2, pelota;
    let yArriba, yAbajo;
    let marcadorJugador1 = 0;
    let marcadorJugador2 = 9;
    let id;

    // Clase para la pelota
    class Ball {
        constructor() {
            this.x = 300;
            this.y = 175;
            this.radio = 10;
            this.color = "white";
            this.velocidad = 3.5;
            this.direccionX = 1; // Dirección horizontal (1 para derecha, -1 para izquierda)
            this.direccionY = 0; // Dirección vertical (basada en el impacto)
        }

        moverPelota() {
            // Actualiza la posición según la dirección (ángulo)
            this.x += this.velocidad * this.direccionX;
            this.y += this.velocidad * this.direccionY;

            // Rebote en los bordes superior e inferior
            if (this.y - this.radio <= 0 || this.y + this.radio >= 350) {
                this.direccionY *= -1; // Invierte la dirección vertical
            }
        }

        dibujarPelota(ctx) {
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.radio, 0, Math.PI * 2);
            ctx.fillStyle = this.color;
            ctx.fill();
            ctx.closePath();
        }
    }

    // Clase para los jugadores
    class Jugadores {
        constructor(x) {
            this.x = x;
            this.y = 137;
            this.anchura = 15;
            this.altura = 75;
            this.velocidad = 3;
            this.color = "white";
        }

        generarPosicionArriba() {
            this.y -= this.velocidad;
            if (this.y < TOPESUPERIOR) this.y = TOPESUPERIOR;
        }

        generarPosicionAbajo() {
            this.y += this.velocidad;
            if (this.y > TOPEINFERIOR) this.y = TOPEINFERIOR;
        }
    }

    // Función para iniciar el juego
    function empezarPartida() {
        pintarPong();
        id = setInterval(pintarPong, 1000 / fps);
        botonStart.disabled = true;
    }

    // Función para reiniciar el juego
    function reiniciarPartida() {
        clearInterval(id);
        marcadorJugador1 = 0;
        marcadorJugador2 = 0;
        pelota = new Ball();
        jugador1 = new Jugadores(15);
        jugador2 = new Jugadores(570);
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        document.getElementById("start").disabled = false;
        pintarMarcador();
    }

    // Función principal del juego
    function pintarPong() {
        ctx.clearRect(0, 0, 600, 350);
        pelota.dibujarPelota(ctx);
        ctx.fillRect(jugador1.x, jugador1.y, jugador1.anchura, jugador1.altura);
        ctx.fillRect(jugador2.x, jugador2.y, jugador2.anchura, jugador2.altura);
        ctx.fillStyle = pelota.color;

        terminarPartida();

        if (yArriba) jugador1.generarPosicionArriba();
        if (yAbajo) jugador1.generarPosicionAbajo();

        moverJugador2();

        pelota.moverPelota();

        colisionConJugador();

        pintarMarcador();
    }

    // Movimiento automático del jugador 2
    function moverJugador2() {

        if (pelota.y < jugador2.y + jugador2.altura / 2) {
            jugador2.y -= jugador2.velocidad;

            if (jugador2.y < TOPESUPERIOR) jugador2.y = TOPESUPERIOR;
        } else if (pelota.y > jugador2.y + jugador2.altura / 2) {
            jugador2.y += jugador2.velocidad;
            if (jugador2.y > TOPEINFERIOR) jugador2.y = TOPEINFERIOR;
        }
    }

    // Detectar colisiones
    function colisionConJugador() {

        let pelotaIzq = pelota.x - pelota.radio;
        let pelotaDer = pelota.x + pelota.radio;
        let pelotaArriba = pelota.y - pelota.radio;
        let pelotaAbajo = pelota.y + pelota.radio;

        let jugador1Izq = jugador1.x;
        let jugador1Der = jugador1.x + jugador1.anchura;
        let jugador1Arriba = jugador1.y;
        let jugador1Abajo = jugador1.y + jugador1.altura;

        let jugador2Izq = jugador2.x;
        let jugador2Der = jugador2.x + jugador2.anchura;
        let jugador2Arriba = jugador2.y;
        let jugador2Abajo = jugador2.y + jugador2.altura;

        if (
            pelotaIzq < jugador1Der &&
            pelotaDer > jugador1Izq &&
            pelotaArriba < jugador1Abajo &&
            pelotaAbajo > jugador1Arriba
        ) {
            pelota.direccionX = 1;
            let impacto = (pelota.y - (jugador1.y + jugador1.altura / 2)) / (jugador1.altura / 2);
            pelota.direccionY = impacto;
            normalizarDireccion();
        }

        if (
            pelotaIzq < jugador2Der &&
            pelotaDer > jugador2Izq &&
            pelotaArriba < jugador2Abajo &&
            pelotaAbajo > jugador2Arriba
        ) {
            pelota.direccionX = -1;
            let impacto = (pelota.y - (jugador2.y + jugador2.altura / 2)) / (jugador2.altura / 2);
            pelota.direccionY = impacto;
            normalizarDireccion();
        }
    }

    // Normalizar dirección
    function normalizarDireccion() {
        let magnitud = Math.sqrt(pelota.direccionX ** 2 + pelota.direccionY ** 2);
        pelota.direccionX /= magnitud;
        pelota.direccionY /= magnitud;
    }

    // Función para sumar puntos
    function haSidoPunto() {
        if (pelota.x - pelota.radio < -6) {
            marcadorJugador2++;
            resetPelota();
        } else if (pelota.x + pelota.radio > 605) {
            marcadorJugador1++;
            resetPelota();
        }
    }

    function resetPelota() {
        pelota.x = 300;
        pelota.y = 175;
        pelota.direccionX *= -1; // Invierte la dirección inicial
        pelota.direccionY = 0; // Resetea dirección vertical
    }

    // Mostrar marcador
    function pintarMarcador() {
        ctx.font = "50px Arial";
        ctx.fillText(marcadorJugador1, 200, 55);
        ctx.fillText(marcadorJugador2, 400, 55);
        haSidoPunto();
    }

    // Terminar partida
    function terminarPartida() {
        if (marcadorJugador1 === 10 || marcadorJugador2 === 10) {
            ctx.font = "25px Arial";
            ctx.fillStyle = "yellow";
            let texto = marcadorJugador1 === 10 ? "EL JUGADOR 1 HA GANADO." : "EL JUGADOR 2 HA GANADO.";
            ctx.fillText(texto, 100, 325);
            clearInterval(id);
        }
    }

    // Detectar teclas
    function activaMovimiento(evt) {
        if (evt.keyCode === 38) yArriba = true;
        if (evt.keyCode === 40) yAbajo = true;
    }

    function desactivaMovimiento(evt) {
        if (evt.keyCode === 38) yArriba = false;
        if (evt.keyCode === 40) yAbajo = false;
    }

    pelota = new Ball();
    jugador1 = new Jugadores(15);
    jugador2 = new Jugadores(570);

    canvas = document.getElementById("miCanvas");
    ctx = canvas.getContext("2d");

    document.addEventListener("keydown", activaMovimiento);
    document.addEventListener("keyup", desactivaMovimiento);

    document.getElementById("start").onclick = empezarPartida;
    document.getElementById("restart").onclick = reiniciarPartida;
};
